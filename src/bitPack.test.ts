import { calculateBitsNeeded } from "./bitPack";

it("bitsNeeded algo works as expected", () => {
  expect(calculateBitsNeeded(0)).toBe(1);
  expect(calculateBitsNeeded(1)).toBe(1);
  expect(calculateBitsNeeded(2)).toBe(2);
  expect(calculateBitsNeeded(3)).toBe(2);
  expect(calculateBitsNeeded(4)).toBe(3);
  expect(calculateBitsNeeded(5)).toBe(3);
  expect(calculateBitsNeeded(6)).toBe(3);
  expect(calculateBitsNeeded(7)).toBe(3);
  expect(calculateBitsNeeded(2 ** 3)).toBe(4);
  expect(calculateBitsNeeded(2 ** 4)).toBe(5);
  expect(calculateBitsNeeded(2 ** 4 - 1)).toBe(4);
  expect(calculateBitsNeeded(2 ** 5)).toBe(6);
  expect(calculateBitsNeeded(2 ** 5 - 1)).toBe(5);
  expect(calculateBitsNeeded(2 ** 6)).toBe(7);
  expect(calculateBitsNeeded(2 ** 6 - 1)).toBe(6);
  expect(calculateBitsNeeded(2 ** 7)).toBe(8);
  expect(calculateBitsNeeded(2 ** 7 - 1)).toBe(7);
  expect(calculateBitsNeeded(2 ** 8)).toBe(9);
  expect(calculateBitsNeeded(2 ** 8 - 1)).toBe(8);
  expect(calculateBitsNeeded(2 ** 9)).toBe(10);
  expect(calculateBitsNeeded(2 ** 9 - 1)).toBe(9);
  expect(calculateBitsNeeded(2 ** 10)).toBe(11);
  expect(calculateBitsNeeded(2 ** 10 - 1)).toBe(10);
  expect(calculateBitsNeeded(2 ** 11)).toBe(12);
  expect(calculateBitsNeeded(2 ** 11 - 1)).toBe(11);
  expect(calculateBitsNeeded(2 ** 12)).toBe(13);
  expect(calculateBitsNeeded(2 ** 12 - 1)).toBe(12);
  expect(calculateBitsNeeded(2 ** 13)).toBe(14);
  expect(calculateBitsNeeded(2 ** 13 - 1)).toBe(13);
  expect(calculateBitsNeeded(2 ** 14)).toBe(15);
  expect(calculateBitsNeeded(2 ** 14 - 1)).toBe(14);
  expect(calculateBitsNeeded(2 ** 15)).toBe(16);
  expect(calculateBitsNeeded(2 ** 15 - 1)).toBe(15);
  expect(calculateBitsNeeded(2 ** 16)).toBe(17);
  expect(calculateBitsNeeded(2 ** 16 - 1)).toBe(16);
  expect(calculateBitsNeeded(2 ** 17)).toBe(18);
  expect(calculateBitsNeeded(2 ** 17 - 1)).toBe(17);
  expect(calculateBitsNeeded(2 ** 18)).toBe(19);
  expect(calculateBitsNeeded(2 ** 18 - 1)).toBe(18);
  expect(calculateBitsNeeded(2 ** 19)).toBe(20);
  expect(calculateBitsNeeded(2 ** 19 - 1)).toBe(19);
  expect(calculateBitsNeeded(2 ** 20)).toBe(21);
  expect(calculateBitsNeeded(2 ** 20 - 1)).toBe(20);
  expect(calculateBitsNeeded(2 ** 21)).toBe(22);
  expect(calculateBitsNeeded(2 ** 21 - 1)).toBe(21);
  expect(calculateBitsNeeded(2 ** 22)).toBe(23);
  expect(calculateBitsNeeded(2 ** 22 - 1)).toBe(22);
  expect(calculateBitsNeeded(2 ** 23)).toBe(24);
  expect(calculateBitsNeeded(2 ** 23 - 1)).toBe(23);
  expect(calculateBitsNeeded(2 ** 23)).toBe(24);
  expect(calculateBitsNeeded(2 ** 24 - 1)).toBe(24);
  expect(calculateBitsNeeded(2 ** 31 - 1)).toBe(31);
  expect(() => calculateBitsNeeded(2 ** 31)).toThrow();
  expect(() => calculateBitsNeeded(2 ** 32)).toThrow();
});
